{
    "name": "restConnector",
    "description": "APS Connector that provides an HTTP client for consuming any REST service",
    "actions": {
        "0d06f1c3-ede6-498a-9ca6-e0ac0f1c9213": {
          "id": "0d06f1c3-ede6-498a-9ca6-e0ac0f1c9213",
          "name": "GET",
          "description": "Invokes the HTTP GET method to get data from a specific resource.",
          "inputs": [
            {
              "id": "96f9f56e-01d3-4c89-a50e-6821b2e92b55",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "22b519bc-3bc0-4bf9-918c-307fd5c043b1",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n            \"searchTerm\": \"birds\",\n            \"type\": \"pictures\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "fc544981-0638-474b-a085-d07c87dc7221",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "de9961d8-6567-4543-baf3-93c90fce603f",
              "name": "circuitBreaker",
              "description": "If this variable is present and true with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "a5ec3067-38c1-4351-be77-5e60423371a6",
              "name": "timeout",
              "description": "Integer with the timeout call in milliseconds. E.g: 910000",
              "type": "integer"
            },
            {
              "id": "210a96d7-b9ad-41c8-bce5-fcc00b626af8",
              "name": "restUrlEncoded",
              "description": "Indicates whether the final URL should be encoded or not",
              "type": "boolean"
            }
          ],
          "outputs": [
            {
              "id": "7a6fd408-3912-4253-98ea-e19be43a8447",
              "name": "restResult",
              "description": "The response from the REST service call",
              "type": "json"
            },
            {
              "id": "d2b5bec0-2c73-46ce-83f5-3d39a23e3b75",
              "name": "restStatus",
              "description": "HTTP response status code",
              "type": "integer"
            },
            {
              "id": "9d6b64bc-6f35-414a-b551-5e73795776f1",
              "name": "restResponseHeaders",
              "description": "HTTP response headers",
              "type": "json"
            }
          ]
        },
        "9718c25a-0f3c-4ad2-85d4-148111ca4d4a": {
          "id": "9718c25a-0f3c-4ad2-85d4-148111ca4d4a",
          "name": "POST",
          "description": "Invokes the HTTP POST method to send data to a server to create/update a resource.",
          "inputs": [
            {
              "id": "6e79e5e5-71ef-4915-b918-5c34f6e87d52",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "c048e6f7-1dad-4ef1-9bae-39c8282a85a7",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n            \"targetParentId\": \"f47b8f9c-3d3c-4bb2-b928-c4b12bd68114\",\n            \"name\": \"newName\"\n       }",
              "type": "json",
              "required": false
            },
            {
              "id": "98e3fa15-bf7b-4402-8a93-79be619de64f",
              "name": "requestPayload",
              "description": "JSON body of the HTTP request",
              "type": "json",
              "required": false
            },
            {
              "id": "7b48ca8b-8b07-4a67-ade9-2abf7a8b448a",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "d6e72d4a-8d59-41cc-9655-e22ff3f5dd81",
              "name": "circuitBreaker",
              "description": "If this variable is present with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "28deba6c-3104-4310-9c4b-f747c370aca2",
              "name": "timeout",
              "description": "Integer with the timeout call in milliseconds. E.g: 910000",
              "type": "integer",
              "required": false
            },
            {
              "id": "9f6f0688-16ee-472a-abdf-baef6caaea02",
              "name": "restUrlEncoded",
              "description": "Indicates whether the final URL should be encoded or not",
              "type": "boolean"
            }
          ],
          "outputs": [
            {
              "id": "5cebbf70-2408-4dd6-86e7-7c1eb77658d9",
              "name": "restResult",
              "description": "The response from the REST service call",
              "type": "json"
            },
            {
              "id": "c0f62a79-e1df-4d7c-9a4d-4ef0d211a8d2",
              "name": "restStatus",
              "description": "HTTP response status code",
              "type": "integer"
            },
            {
              "id": "7fdd9cb4-d4c5-4e53-8015-ed60a77a01a1",
              "name": "restResponseHeaders",
              "description": "HTTP response headers",
              "type": "json"
            }
          ]
        },
        "48a9c52c-faf8-4ebd-bfcc-884002e1a0df": {
          "id": "48a9c52c-faf8-4ebd-bfcc-884002e1a0df",
          "name": "PUT",
          "description": "Invokes the PUT HTTP method to send data to a server to create/update a resource.",
          "inputs": [
            {
              "id": "e341d517-c842-4d53-b678-abe6794424b1",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "7a2aba34-103a-40e8-bb40-616e1535e789",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n \"name\": \"newName\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "8c55682d-5aba-4d6c-bcd9-20545286b2fd",
              "name": "requestPayload",
              "description": "JSON body of the HTTP request",
              "type": "json",
              "required": false
            },
            {
              "id": "9bffbc7a-2c42-4746-a802-e367ba2e683b",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "b5e43c1d-06c3-472a-b4ff-72adaf689095",
              "name": "circuitBreaker",
              "description": "If this variable is present with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "efeadbe9-3526-42bb-b129-78f6ff9376e6",
              "name": "timeout",
              "description": "Integer with the timeout call in milliseconds. E.g: 910000",
              "type": "integer",
              "required": false
            },
            {
              "id": "2afa3b18-5cb9-408d-b0cf-ea7d4bfae7a9",
              "name": "restUrlEncoded",
              "description": "Indicates whether the final URL should be encoded or not",
              "type": "boolean"
            }
          ],
          "outputs": [
            {
              "id": "a5587a45-675e-4197-a949-4f9c2153cfdf",
              "name": "restResult",
              "description": "The response from the REST service call",
              "type": "json"
            },
            {
              "id": "d0456ee8-bfa7-4987-9c8f-b87f9a00685c",
              "name": "restStatus",
              "description": "HTTP response status code",
              "type": "integer"
            },
            {
              "id": "ecd5a389-aa89-48dc-a8f5-badefe68286c",
              "name": "restResponseHeaders",
              "description": "HTTP response headers",
              "type": "json"
            }
          ]
        },
        "ec357914-11f2-448c-bf82-f02b93e816c2": {
          "id": "ec357914-11f2-448c-bf82-f02b93e816c2",
          "name": "PATCH",
          "description": "Invokes the PATCH HTTP method to apply partial modifications to a resource",
          "inputs": [
            {
              "id": "7b7d3626-1127-4b77-8c2a-0aa79fb62387",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "1c47e15d-5d16-41d4-9c33-219b8b4c7117",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n            \"email\": \"jon.doe@alfresco.com\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "61c918d7-6171-4fc4-b7ff-42ce04f95bfe",
              "name": "requestPayload",
              "description": "JSON body of the HTTP request",
              "type": "json",
              "required": false
            },
            {
              "id": "9b4a704f-fa7a-4f13-bc85-b263211e7b42",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "861576b1-9d5e-4058-91e2-f2a641918c1d",
              "name": "circuitBreaker",
              "description": "If this variable is present with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "9c7786ee-f763-4a3f-8241-630428ddaa89",
              "name": "timeout",
              "description": "HTTP request timeout in milliseconds. E.g: 910000",
              "type": "integer",
              "required": false
            },
            {
              "id": "2a85c388-4ca8-4d63-802f-f4c1f945bb84",
              "name": "restUrlEncoded",
              "description": "Indicates whether the final URL should be encoded or not",
              "type": "boolean"
            }
          ],
          "outputs": [
            {
              "id": "e8e3bc6a-5faf-4ea1-8656-42f2ff86dc69",
              "name": "restResult",
              "description": "The response from the REST service call",
              "type": "json"
            },
            {
              "id": "35d86bc8-17cc-4408-871a-a47e31d51d6b",
              "name": "restStatus",
              "description": "HTTP response status code",
              "type": "integer"
            },
            {
              "id": "1a8e4e4c-c9d9-4df8-9186-ed43e9a9c794",
              "name": "restResponseHeaders",
              "description": "HTTP response headers",
              "type": "json"
            }
          ]
        },
        "397284cc-178e-41e5-b25f-228e597fd919": {
          "id": "397284cc-178e-41e5-b25f-228e597fd919",
          "name": "DELETE",
          "description": "Invokes the DELETE HTTP method to delete a resource",
          "inputs": [
            {
              "id": "ee54da23-4b9c-4c22-89cc-dfe70ff8f65f",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "4b8a1e5c-d0f7-4d42-be22-ceb4e301345e",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n            \"nodeId\": \"f47b8f9c-3d3c-4bb2-b928-c4b12bd68114\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "bc2ba8fa-5f15-428c-b2db-a7dfe4e009ce",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "5bf41244-d8bd-426d-a93e-4bdb09a305ed",
              "name": "circuitBreaker",
              "description": "If this variable is present with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "b846314f-e9dc-4c60-978f-e564b0a37ddf",
              "name": "timeout",
              "description": "HTTP request timeout in milliseconds. E.g: 910000",
              "type": "integer",
              "required": false
            },
            {
              "id": "1ae603ad-27b5-486a-960c-2f8085c222fa",
              "name": "restUrlEncoded",
              "description": "Indicates whether the final URL should be encoded or not",
              "type": "boolean"
            }
          ],
          "outputs": [
            {
              "id": "3d3ab149-d250-4369-ba9a-2d2b39430b6c",
              "name": "restStatus",
              "description": "HTTP Response status code",
              "type": "integer"
            },
            {
              "id": "4ea22db1-f46e-45eb-a9b9-6944c4e2dd84",
              "name": "restResult",
              "description": "The response from the REST service call",
              "type": "json"
            },
            {
              "id": "88433eab-983f-4384-85a5-d64f4cea857c",
              "name": "restResponseHeaders",
              "description": "HTTP response headers",
              "type": "json"
            }
          ]
        },
        "878cf6eb-310a-402b-b1d6-e68efc5bcc41": {
          "id": "878cf6eb-310a-402b-b1d6-e68efc5bcc41",
          "name": "HEAD",
          "description": "Invokes the HTTP HEAD method to ask for a response identical to that of a GET request, but without the response body.",
          "inputs": [
            {
              "id": "2625962e-0fb7-4ce3-a057-070af2ea03d4",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "db93403d-8758-4358-bbe8-ebc2cd4406d5",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n            \"searchTerm\": \"birds\",\n            \"type\": \"pictures\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "570a1292-fae5-4105-88ec-a477a5496f74",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "78337af6-452b-4c48-9a47-ce9c28bf1c62",
              "name": "circuitBreaker",
              "description": "If this variable is present with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "5a3020d5-7a90-4627-a80b-fd31c477a10a",
              "name": "timeout",
              "description": "HTTP request timeout in milliseconds. E.g: 910000",
              "type": "integer"
            },
            {
              "id": "e93aacf5-0fcb-46ee-ac12-e173b5955d96",
              "name": "restUrlEncoded",
              "description": "Indicates whether the final URL should be encoded or not",
              "type": "boolean"
            }
          ],
          "outputs": [
            {
              "id": "4f7c867e-4959-424f-82e2-e3814419de99",
              "name": "restStatus",
              "description": "HTTP Response status code",
              "type": "integer"
            },
            {
              "id": "f48e6ab7-1c56-4852-8040-a219bcd89a0c",
              "name": "restResponseHeaders",
              "description": "HTTP response headers",
              "type": "json"
            }
          ]
        },
        "b7f7045a-6044-48e2-a570-a0a811353144": {
          "id": "b7f7045a-6044-48e2-a570-a0a811353144",
          "name": "OPTIONS",
          "description": "Invokes the HTTP OPTIONS method get a description of the communication options for the target resource.",
          "inputs": [
            {
              "id": "119ac3b8-012e-472c-ab8f-791e4831c543",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "2c6d936b-15e6-46d5-ad56-285bb25d8a2c",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n            \"searchTerm\": \"birds\",\n            \"type\": \"pictures\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "5badf594-42c5-4590-8dea-5e98d0646af5",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "5ae1d11b-6018-400a-80c9-cf4859e4eb9e",
              "name": "circuitBreaker",
              "description": "If this variable is present with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "0e28541c-6179-4281-bc08-a323dbbb850f",
              "name": "timeout",
              "description": "HTTP request timeout in milliseconds. E.g: 910000",
              "type": "integer",
              "required": false
            },
            {
              "id": "e22e3f17-b025-464e-9808-aadee1e76e81",
              "name": "restUrlEncoded",
              "description": "Indicates whether the final URL should be encoded or not",
              "type": "boolean",
              "required": false
            }
          ],
          "outputs": [
            {
              "id": "d1bbe987-9d46-41ab-aeaa-bf0fe3a089be",
              "name": "restStatus",
              "description": "HTTP Response status code",
              "type": "integer"
            },
            {
              "id": "b7c9284f-a147-40d0-ae56-063a880e1c3c",
              "name": "restResponseHeaders",
              "description": "HTTP response headers",
              "type": "json"
            }
          ]
        },
        "53bba011-ca41-455c-9957-808ee2e5d524": {
          "id": "53bba011-ca41-455c-9957-808ee2e5d524",
          "name": "TRACE",
          "description": "Invokes the HTTP TRACE method get the request back for debug purposes.",
          "inputs": [
            {
              "id": "ac3b78f6-3646-416c-9f51-51c9119a179d",
              "name": "restUrl",
              "description": "URL of the REST endpoint including protocol, host and path. E.g. 'http://www.alfresco.com'\n",
              "type": "string",
              "required": true
            },
            {
              "id": "51fb6279-004c-45d7-9913-79456e5706dd",
              "name": "restUrlParams",
              "description": "Map of URL params names and values to be appended to the url. E.g:\n{\n            \"searchTerm\": \"birds\",\n            \"type\": \"pictures\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "e361e47b-a895-4b84-b1a5-6e4e8a3c489e",
              "name": "requestHeaders",
              "description": "Map of request header names and values. Values can be fixed values, variables or form fields. E.g:\n{\n            \"header1\": \"value1\",\n            \"header2\": \"value2\"\n        }",
              "type": "json",
              "required": false
            },
            {
              "id": "58cb5730-a43a-4bca-a40d-13d9ca01bb1e",
              "name": "circuitBreaker",
              "description": "If this variable is present with any value, the circuit breaker is enabled.",
              "type": "boolean",
              "required": false
            },
            {
              "id": "5bc257b5-9cc8-478c-a0f9-952b6f555e41",
              "name": "timeout",
              "description": "HTTP request timeout in milliseconds. E.g: 910000",
              "type": "integer",
              "required": false
            }
          ],
          "outputs": [
            {
              "id": "bdadb211-de3b-41f5-aa63-ed1531c086e6",
              "name": "restStatus",
              "description": "HTTP Response status code",
              "type": "integer"
            },
            {
              "id": "1fa60552-2009-4fc5-8f4d-bec20f61ca5d",
              "name": "restResult",
              "description": "The response from the REST service call",
              "type": "string"
            }
          ]
        }
    },
    "events": {
      "4ac27979-8a7d-4869-a187-178fc0f0052b": {
        "id": "4ac27979-8a7d-4869-a187-178fc0f0052b",
        "name": "INCOMING_WEBHOOK",
        "description": "Incoming WebHook ",
        "inputs": [
          {
            "id": "3e0e286f-fb51-4197-996b-f41193e4a337",
            "name": "method",
            "description": "HTTP methods that can trigger an action",
            "type": "array"
          },
          {
            "id": "68015970-2ee9-4e5b-baa9-1b4fd41e318f",
            "name": "path",
            "description": "Regular expression that the relative path of the URL shall match in order to trigger the action",
            "type": "url-pattern",
            "required": false
          },
          {
            "id": "ac236ebd-da75-422e-9e92-c2e41e26f829",
            "name": "condition",
            "description": "Expression that shall be true in order to trigger an action. Event and payload can be used in variables.",
            "type": "predicate",
            "required": false
          },
          {
            "id": "dc7ba61f-3747-4f7f-b205-80373ea13803",
            "name": "status",
            "description": "Status code to be returned to the service",
            "type": "integer",
            "required": false
          },
          {
            "id": "0675c9c0-02ce-4cdb-a4b0-d52250ad4c88",
            "name": "headers",
            "description": "HTTP headers that shall match in order to trigger an action",
            "type": "key-value"
          },
          {
            "id": "dd2f53a3-fb99-42c0-9997-3ec699ba8dfd",
            "name": "params",
            "description": "Request params that shall match in order to trigger an action",
            "type": "key-value",
            "required": false
          },
          {
            "id": "d9f34d2f-a936-4338-854a-3b88c3b535a0",
            "name": "body",
            "description": "JSON Body to be returned to the external service. It can contain JUEL expressions that can be resolved using the event output as context metadata",
            "type": "json"
          }
        ],
        "outputs": [
          {
            "id": "e946ceab-d031-4192-99d9-fbbb49d6f92b",
            "name": "method",
            "description": "HTTP method of the request",
            "type": "string"
          },
          {
            "id": "7ef7c26e-e7c8-487c-9c56-d96ca4687350",
            "name": "path",
            "description": "Relative path of the request URL",
            "type": "string"
          },
          {
            "id": "9421374d-184f-4aac-b477-0addb442e924",
            "name": "params",
            "description": "Query string or form params of the request",
            "type": "json"
          },
          {
            "id": "ed2c3dc2-b0c4-4347-889e-296516ab36c8",
            "name": "headers",
            "description": "Headers of the HTTP request",
            "type": "json"
          },
          {
            "id": "5e42cec5-8d0a-4bcc-b872-a54b873f08b6",
            "name": "body",
            "description": "Body of the HTTP request",
            "type": "json"
          }
        ],
        "model": {
            "$schema": "https://json-schema.org/draft/2019-09/schema",
            "$defs" : {
              "mapList" : {
                "type" : "object",
                "additionalProperties": {
                  "type": "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            },
            "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "params": {
                  "$ref" : "#/$defs/mapList"
                },
                "headers": {
                  "$ref" : "#/$defs/mapList"
                },
                "body": {
                  "type": "object"
                }
              },
                "required": [
                  "method",
                  "path"
                ]
        }
      }
    },
    "errors": [
        {
            "name": "MISSING_INPUT",
            "description": "A mandatory input variable was not provided",
            "code": "MISSING_INPUT"
        },
        {
            "name": "INVALID_INPUT",
            "description": "The input variable has an invalid type",
            "code": "INVALID_INPUT"
        },
        {
            "name": "UNKNOWN_ERROR",
            "description": "Unexpected runtime error",
            "code": "UNKNOWN_ERROR"
        },
        {
            "name": "BAD_REQUEST",
            "description": "The server could not understand the request due to invalid syntax",
            "code": "BAD_REQUEST"
        },
        {
            "name": "UNAUTHORIZED",
            "description": "The request has not been applied because it lacks valid authentication",
            "code": "UNAUTHORIZED"
        },
        {
            "name": "FORBIDDEN",
            "description": "The server understood the request but refuses to authorize it",
            "code": "FORBIDDEN"
        },
        {
            "name": "NOT_FOUND",
            "description": "The server could not find what was requested",
            "code": "NOT_FOUND"
        },
        {
            "name": "METHOD_NOT_ALLOWED",
            "description": "The request method is known by the server but is not supported",
            "code": "METHOD_NOT_ALLOWED"
        },
        {
            "name": "NOT_ACCEPTABLE",
            "description": "The server cannot produce a response matching the list of acceptable values",
            "code": "NOT_ACCEPTABLE"
        },
        {
            "name": "PROXY_AUTHENTICATION_REQUIRED",
            "description": "The request has not been applied because it lacks valid authentication",
            "code": "PROXY_AUTHENTICATION_REQUIRED"
        },
        {
            "name": "REQUEST_TIMEOUT",
            "description": "The server would like to shut down this unused connection",
            "code": "REQUEST_TIMEOUT"
        },
        {
            "name": "CONFLICT",
            "description": "The request conflicts with current state of the server",
            "code": "CONFLICT"
        },
        {
            "name": "GONE",
            "description": "No longer available",
            "code": "GONE"
        },
        {
            "name": "INTERNAL_SERVER_ERROR",
            "description": "The server has encountered a situation it doesn't know how to handle",
            "code": "INTERNAL_SERVER_ERROR"
        },
        {
            "name": "NOT_IMPLEMENTED",
            "description": "The request method is not supported by the server and cannot be handled",
            "code": "NOT_IMPLEMENTED"
        },
        {
            "name": "BAD_GATEWAY",
            "description": "The server got an invalid response",
            "code": "BAD_GATEWAY"
        },
        {
            "name": "SERVICE_UNAVAILABLE",
            "description": "The server is not ready to handle the request",
            "code": "SERVICE_UNAVAILABLE"
        },
        {
            "name": "GATEWAY_TIMEOUT",
            "description": "The server is acting as a gateway and cannot get a response in time",
            "code": "GATEWAY_TIMEOUT"
        },
        {
          "name": "INVALID_AUTHENTICATION_TYPE",
          "description": "The authentication type is invalid",
          "code": "INVALID_AUTHENTICATION_TYPE"
        },
        {
          "name": "INVALID_CREDENTIALS_TOKEN",
          "description": "The credentials are invalid",
          "code": "INVALID_CREDENTIALS_TOKEN"
        },
        {
          "name": "INVALID_AUTHENTICATION_DATA",
          "description": "The authentication data is invalid",
          "code": "INVALID_AUTHENTICATION_DATA"
        }
    ],
    "config": [
        {
            "name": "EVENT_NOT_MATCH_STATUS",
            "description": "",
            "value": "404"
        }
    ]
}
