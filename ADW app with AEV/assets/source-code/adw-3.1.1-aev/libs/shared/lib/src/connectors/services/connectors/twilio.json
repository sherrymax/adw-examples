{
    "name": "twilioConnector",
    "description": "APS Connector that provides an integration with Twilio to send and receive SMS",
    "actions": {
      "0e035be2-5b2b-4bbe-88aa-46e8ad37ea72": {
        "id": "0e035be2-5b2b-4bbe-88aa-46e8ad37ea72",
        "name": "SEND_SMS",
        "description": "Send SMS through Twilio",
        "inputs": [
          {
            "id": "e441111c-5a3d-4f78-a571-f57e67ce85bf",
            "name": "smsFrom",
            "description": "Phone number, origin of the communication. This number is provided by the Twilio account.",
            "type": "string",
            "required": true
          },
          {
            "id": "93155b04-cb61-48e5-b7cb-63334f084c4d",
            "name": "smsTo",
            "description": "List of phone numbers, destination of the communication",
            "type": "string",
            "required": true
          },
          {
            "id": "159ae58f-f34b-469a-b862-176e51d64d70",
            "name": "smsBody",
            "description": "Text to be sent. Freemarker templates are supported.",
            "type": "string",
            "required": true
          },
          {
            "id": "635b5c97-62b8-49db-950e-6d27c9c30cf3",
            "name": "metadata",
            "description": "Metadata to be used by the template to resolve variable placeholders. Metadata is a JSON object that contains key-value pairs.",
            "type": "json"
          }
        ],
        "outputs": [
          {
            "id": "aef1f9e4-206b-46c7-83ea-9950bc3938cc",
            "name": "smsResult",
            "description": "Map of message ids by destination number",
            "type": "json"
          }
        ]
      }
    },
    "events": {
        "f5945447-92ee-4dd9-8277-9948a347264d": {
            "id": "f5945447-92ee-4dd9-8277-9948a347264d",
            "name": "SMS_RECEIVED",
            "description": "Event that is dispatched when an SMS is received through Twilio",
            "inputs": [
                {
                    "id": "b42f4b40-46ab-4270-a163-0eddd8c91920",
                    "name": "condition",
                    "description": "Expression that shall be true in order to trigger an action. Event and payload can be used in variables.",
                    "type": "predicate",
                    "required": false
                },
                {
                    "id": "cf141d98-53d2-4a69-8d48-9e1e79963e8f",
                    "name": "pattern",
                    "description": "Regular expression that any incoming message shall match in order to be published as events. Regular expressions can contain matching groups delimited by '(' and ')'. Matching groups can be used in variables and the echo message.",
                    "type": "string"
                },
                {
                    "id": "df2dfa1f-c595-4acf-a25d-ba281a193a15",
                    "name": "echo",
                    "description": "Message to reply to the user if the incoming message matches the pattern.",
                    "type": "string",
                    "required": false
                },
                {
                    "id": "af830b23-ecc7-4e2a-95d3-9665ded6bb38",
                    "name": "echoError",
                    "description": "Message to reply to the user if an error occurs trying to publish the event.",
                    "type": "string",
                    "required": false
                }
            ],
            "outputs": [
                {
                    "id": "46ad8f50-7c50-48ae-892d-256cfe688b89",
                    "name": "matchGroups",
                    "description": "Matching groups between pattern and message. They can be used in variables and the echo messages.",
                    "type": "json"
                },
                {
                    "id": "67ee69cb-837c-4c09-97eb-a7826daad0fa",
                    "name": "originalMessage",
                    "description": "Original message that receives the event.",
                    "type": "string"
                },
                {
                    "id": "4a1c4265-c5c9-49e9-9b0b-0cb0c3c2b1dd",
                    "name": "to",
                    "description": "The recipient of the message.",
                    "type": "string"
                },
                {
                    "id": "e59f3335-7404-4c01-865f-f4ebe5159329",
                    "name": "from",
                    "description": "The writer of the message.",
                    "type": "string"
                }
            ],
            "model": {
                "$schema": "https://json-schema.org/draft/2019-09/schema",
                "type": "object",
                  "properties": {
                    "originalMessage": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "originalMessage",
                    "to",
                    "from"
                  ]
            }
          }
    },
    "errors": [
      {
        "name": "MISSING_INPUT",
        "description": "A mandatory input variable was not provided",
        "code": "MISSING_INPUT"
      },
      {
        "name": "INVALID_INPUT",
        "description": "The input variable has an invalid type",
        "code": "INVALID_INPUT"
      },
      {
        "name": "TWILIO_CONNECTION_ERROR",
        "description": "Unable to connect to Twilio service",
        "code": "TWILIO_CONNECTION_ERROR"
      },
      {
        "name": "AUTHENTICATION_CONNECTION_ERROR",
        "description": "Unable to authenticate to Twilio",
        "code": "AUTHENTICATION_CONNECTION_ERROR"
      },
      {
        "name": "INVALID_REQUEST_ERROR",
        "description": "Invalid request",
        "code": "INVALID_REQUEST_ERROR"
      },
      {
        "name": "INVALID_TO_PHONE_NUMBER_ERROR",
        "description": "Invalid 'to' phone number",
        "code": "INVALID_TO_PHONE_NUMBER_ERROR"
      },
      {
        "name": "INVALID_FROM_PHONE_NUMBER_ERROR",
        "description": "Invalid 'from' phone number",
        "code": "INVALID_FROM_PHONE_NUMBER_ERROR"
      },
      {
        "name": "PERMISSION_DENIED_ERROR",
        "description": "Lack of permission to the resource and method requested",
        "code": "PERMISSION_DENIED_ERROR"
      },
      {
        "name": "INVALID_REGION_TO_PHONE_NUMBER_ERROR",
        "description": "Permission to send an SMS has not been enabled for the region indicated by the 'To' number",
        "code": "INVALID_REGION_TO_PHONE_NUMBER_ERROR"
      },
      {
        "name": "TEMPLATE_READ_ERROR",
        "description": "Cannot read the Freemarker template",
        "code": "TEMPLATE_READ_ERROR"
      },
      {
        "name": "TEMPLATE_METADATA_ERROR",
        "description": "The template references non-existing metadata",
        "code": "TEMPLATE_METADATA_ERROR"
      },
      {
        "name": "TEMPLATE_SYNTAX_ERROR",
        "description": "Invalid Freemarker syntax",
        "code": "TEMPLATE_SYNTAX_ERROR"
      },
      {
        "name": "UNKNOWN_ERROR",
        "description": "Unexpected runtime error",
        "code": "UNKNOWN_ERROR"
      },
      {
        "name": "BAD_REQUEST",
        "description": "The server could not understand the request due to invalid syntax",
        "code": "BAD_REQUEST"
      },
      {
        "name": "UNAUTHORIZED",
        "description": "The request has not been applied because it lacks valid authentication",
        "code": "UNAUTHORIZED"
      },
      {
        "name": "FORBIDDEN",
        "description": "The server understood the request but refuses to authorize it",
        "code": "FORBIDDEN"
      },
      {
        "name": "NOT_FOUND",
        "description": "The server could not find what was requested",
        "code": "NOT_FOUND"
      },
      {
        "name": "METHOD_NOT_ALLOWED",
        "description": "The request method is known by the server but is not supported",
        "code": "METHOD_NOT_ALLOWED"
      },
      {
        "name": "NOT_ACCEPTABLE",
        "description": "The server cannot produce a response matching the list of acceptable values",
        "code": "NOT_ACCEPTABLE"
      },
      {
        "name": "REQUEST_TIMEOUT",
        "description": "The server would like to shut down this unused connection",
        "code": "REQUEST_TIMEOUT"
      },
      {
        "name": "CONFLICT",
        "description": "The request conflicts with current state of the server",
        "code": "CONFLICT"
      },
      {
        "name": "GONE",
        "description": "No longer available",
        "code": "GONE"
      },
      {
        "name": "UNPROCESSABLE_ENTITY",
        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions",
        "code": "UNPROCESSABLE_ENTITY"
      },
      {
        "name": "LOCKED",
        "description": "The resource that is being accessed is locked",
        "code": "LOCKED"
      },
      {
        "name": "FAILED_DEPENDENCY",
        "description": "The request failed due to failure of a previous request",
        "code": "FAILED_DEPENDENCY"
      },
      {
        "name": "INTERNAL_SERVER_ERROR",
        "description": "The server has encountered a situation it doesn't know how to handle",
        "code": "INTERNAL_SERVER_ERROR"
      },
      {
        "name": "NOT_IMPLEMENTED",
        "description": "The request method is not supported by the server and cannot be handled",
        "code": "NOT_IMPLEMENTED"
      },
      {
        "name": "BAD_GATEWAY",
        "description": "The server got an invalid response",
        "code": "BAD_GATEWAY"
      },
      {
        "name": "SERVICE_UNAVAILABLE",
        "description": "The server is not ready to handle the request",
        "code": "SERVICE_UNAVAILABLE"
      },
      {
        "name": "GATEWAY_TIMEOUT",
        "description": "The server is acting as a gateway and cannot get a response in time",
        "code": "GATEWAY_TIMEOUT"
      }
    ],
    "config": [
        {
            "name": "TWILIO_ACCOUNT",
            "description": "Twilio account name",
            "value": "",
            "required": true
        },
        {
            "name": "TWILIO_TOKEN",
            "description": "Twilio account token",
            "value": "",
            "required": true,
            "secure": true
        }
    ]
}
